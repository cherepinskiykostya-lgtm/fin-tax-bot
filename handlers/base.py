from telegram import Update
from telegram.ext import ContextTypes
from db.session import SessionLocal
from db.models import User

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.effective_user:
        try:
            async with SessionLocal() as session:
                await session.run_sync(lambda sync_conn: User.metadata.create_all(sync_conn))
                existing = await session.get(User, update.effective_user.id)
                if not existing:
                    session.add(User(
                        id=update.effective_user.id,
                        username=update.effective_user.username,
                        first_name=update.effective_user.first_name,
                        last_name=update.effective_user.last_name,
                        language_code=update.effective_user.language_code,
                    ))
                await session.commit()
        except Exception:
            pass
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –ë–æ—Ç –Ω–∞ Railway –≥–æ—Ç–æ–≤ üöÄ  /help ‚Äî —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥")

async def help_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = "–ö–æ–º–∞–Ω–¥—ã:\n/start ‚Äî –Ω–∞—á–∞—Ç—å\n/help ‚Äî –ø–æ–º–æ—â—å\n/ping ‚Äî –ø—Ä–æ–≤–µ—Ä–∫–∞"
    await update.message.reply_text(text)

async def ping(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("pong ‚úÖ")
